############################################
#                                          #
#         MySQL properties                 #
#                                          #
############################################

# none = This is the default for MySQL, no change to the database structure.
# update = Hibernate changes the database according to the given Entity structures.
# create = Creates the database every time, but don’t drop it when close.
# create-drop =  Creates the database then drops it when the SessionFactory closes.
#
# It is good security practice that after your database is in production state,
# you make this none and revoke all privileges from the MySQL user connected to the Spring application,
# then give him only SELECT, UPDATE, INSERT, DELETE.
# source: http://spring.io/guides/gs/accessing-data-mysql/
spring.jpa.hibernate.ddl-auto=create

#
spring.datasource.url=jdbc:mysql://localhost:3306/springdepartapp

#
spring.datasource.username=root

#
spring.datasource.password=root

############################################
#                                          #
#         API   properties                 #
#                                          #
############################################

#
spring.data.rest.base-path=/api

############################################
#                                          #
#        Logging properties                #
#                                          #
############################################

#
#logging.level.root=TRACE
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR